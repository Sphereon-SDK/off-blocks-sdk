{
	"swagger": "2.0",
	"info": {
		"description": "Off-Blocks description of API.",
		"version": "1.2.2",
		"title": "Off-Blocks API",
		"termsOfService": "Terms of service",
		"contact": {
			"name": "Off-Blocks LTD",
			"url": "off-blocks.com",
			"email": "info@off-blocks.com"
		},
		"license": {}
	},
	"host": "api.acc.off-blocks.com",
	"securityDefinitions": {
		"oauth2schema": {
			"tokenUrl": "https://gw.api.cloud.sphereon.com/token",
			"scopes": {
				"global": "accessEverything"
			},
			"type": "oauth2",
			"flow": "application"
		}
	},
	"basePath": "/offblocks",
	"tags": [
		{
			"name": "app-version-controller",
			"description": "App Version Controller"
		},
		{
			"name": "auth-controller",
			"description": "Auth Controller"
		},
		{
			"name": "customer-controller",
			"description": "Customer Controller"
		},
		{
			"name": "file-controller",
			"description": "File Controller"
		},
		{
			"name": "file-signatory-controller",
			"description": "File Signatory Controller"
		},
		{
			"name": "group-controller",
			"description": "the Groups API"
		},
		{
			"name": "pdf-stamper-controller",
			"description": "Pdf Stamper Controller"
		},
		{
			"name": "product-controller",
			"description": "Product Controller"
		},
		{
			"name": "user-controller",
			"description": "User Controller"
		},
		{
			"name": "user-controller-spec",
			"description": "the Users API"
		}
	],
	"paths": {
		"/api/auth/signin": {
			"post": {
				"tags": [
					"auth-controller"
				],
				"summary": "authenticateUser",
				"operationId": "authenticateUserUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "loginRequest",
						"description": "loginRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/LoginRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/JwtAuthenticationResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/auth/signup": {
			"post": {
				"tags": [
					"auth-controller"
				],
				"summary": "registerUser",
				"operationId": "registerUserUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "signUpRequest",
						"description": "signUpRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SignUpRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/JwtAuthenticationResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getFileDetails",
				"operationId": "getFileDetailsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FileDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": [
					"file-controller"
				],
				"summary": "deleteFile",
				"operationId": "deleteFileUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/audit/by-hash": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "auditFileByHash",
				"operationId": "auditFileByHashUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "hash",
						"in": "query",
						"description": "hash",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AuditResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/chain-id": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getFileDetailsByChainId",
				"operationId": "getFileDetailsByChainIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "chainId",
						"in": "query",
						"description": "chainId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FileDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": true
			}
		},
		"/api/file/create": {
			"post": {
				"tags": [
					"file-controller"
				],
				"summary": "createFile",
				"security": [{"oauth2schema": ["global"]}],
				"operationId": "createFileUsingPOST",
				"consumes": [
					"multipart/form-data"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "formData",
						"name": "data",
						"description": "data",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "file",
						"in": "formData",
						"description": "file",
						"required": true,
						"type": "file"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FileDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/create-template": {
			"post": {
				"tags": [
					"file-controller"
				],
				"summary": "createFileTemplate",
				"operationId": "createFileTemplateUsingPOST",
				"consumes": [
					"multipart/form-data"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "formData",
						"name": "data",
						"description": "data",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "file",
						"in": "formData",
						"description": "file",
						"required": true,
						"type": "file"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FileDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/download-signatories/{annotatedFileId}": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "downloadOutputSignatoryFile",
				"operationId": "downloadOutputSignatoryFileUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "annotatedFileId",
						"in": "path",
						"description": "annotatedFileId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/download-template/{templateId}": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "downloadOutputTemplateFile",
				"operationId": "downloadOutputTemplateFileUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "templateId",
						"in": "path",
						"description": "templateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/download/{fileId}": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "downloadOutputFile",
				"operationId": "downloadOutputFileUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "fileId",
						"in": "path",
						"description": "fileId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/file-statistics": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getGeneralFileStatusStatistics",
				"operationId": "getGeneralFileStatusStatisticsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FileStatisticsDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/files": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getUserFiles",
				"operationId": "getUserFilesUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FileDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/history": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getFileHistory",
				"operationId": "getFileHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FileDetailsDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/managed": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getManagedFileDetails",
				"operationId": "getManagedFileDetailsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FileDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/managed/download/{managedUserSignUuid}": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "downloadManagedOutputFile",
				"operationId": "downloadManagedOutputFileUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "managedUserSignUuid",
						"in": "path",
						"description": "managedUserSignUuid",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/object-chain": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getObjectChainId",
				"operationId": "getObjectChainIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "hash",
						"in": "query",
						"description": "hash",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/prove": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "proveFile",
				"operationId": "proveFileUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/prove/{fileId}": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "proveOutputFile",
				"operationId": "proveOutputFileUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "fileId",
						"in": "path",
						"description": "fileId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/proveit": {
			"post": {
				"tags": [
					"file-controller"
				],
				"summary": "proveFileValidity",
				"operationId": "proveFileValidityUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fileRequest",
						"description": "fileRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FileRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/sign-recovery": {
			"post": {
				"tags": [
					"file-controller"
				],
				"summary": "recoverRejectedFile",
				"operationId": "recoverRejectedFileUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fileRequest",
						"description": "fileRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FileRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/signature-history": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getSignatureHistory",
				"operationId": "getSignatureHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "blockchainEventRole",
						"in": "query",
						"description": "blockchainEventRole",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "fileTypes",
						"in": "query",
						"description": "fileTypes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "inProgress",
						"in": "query",
						"description": "inProgress",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "isCreator",
						"in": "query",
						"description": "isCreator",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "isProcessed",
						"in": "query",
						"description": "isProcessed",
						"required": true,
						"type": "boolean"
					},
					{
						"name": "title",
						"in": "query",
						"description": "title",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FileDetailsDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/signing-expiry": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "updateFileSigningExpiry",
				"operationId": "updateFileSigningExpiryUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/template": {
			"delete": {
				"tags": [
					"file-controller"
				],
				"summary": "deleteTemplate",
				"operationId": "deleteTemplateUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/templates": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getUserTemplates",
				"operationId": "getUserTemplatesUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FileDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/file/undersigned": {
			"get": {
				"tags": [
					"file-controller"
				],
				"summary": "getUndersignedFiles",
				"operationId": "getUndersignedFilesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "isProcessed",
						"in": "query",
						"description": "isProcessed",
						"required": true,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FileDetailsDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": true
			}
		},
		"/api/filesignatory/managed/{managedUserSignUuid}/annotations": {
			"get": {
				"tags": [
					"file-signatory-controller"
				],
				"summary": "getAnnotations",
				"operationId": "getAnnotationsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "managedUserSignUuid",
						"in": "path",
						"description": "managedUserSignUuid",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/AnnotationDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/filesignatory/managed/{managedUserSignUuid}/sign": {
			"post": {
				"tags": [
					"file-signatory-controller"
				],
				"summary": "signFileAsManagedUser",
				"operationId": "signFileAsManagedUserUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fileSignDTO",
						"description": "fileSignDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FileSignDTO"
						}
					},
					{
						"name": "managedUserSignUuid",
						"in": "path",
						"description": "managedUserSignUuid",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/filesignatory/signatory": {
			"post": {
				"tags": [
					"file-signatory-controller"
				],
				"summary": "SignFile",
				"operationId": "SignFileUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fileSignatoryDTO",
						"description": "fileSignatoryDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FileSignatoryDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FileDetailsDTO"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/filesignatory/signature-limits": {
			"get": {
				"tags": [
					"file-signatory-controller"
				],
				"summary": "getSignatureLimits",
				"operationId": "getSignatureLimitsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SignatureLimitsDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/filesignatory/versioned/sign": {
			"post": {
				"tags": [
					"file-signatory-controller"
				],
				"summary": "versionedSignFile",
				"operationId": "versionedSignFileUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fileVersionedSignatoryDTO",
						"description": "fileVersionedSignatoryDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FileVersionedSignatoryDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FileDetailsDTO"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/filesignatory/{fileSignatoryId}/annotations": {
			"get": {
				"tags": [
					"file-signatory-controller"
				],
				"summary": "getAnnotations",
				"operationId": "getAnnotationsUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "fileSignatoryId",
						"in": "path",
						"description": "fileSignatoryId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/AnnotationDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/filesignatory/{fileSignatoryId}/sign": {
			"post": {
				"tags": [
					"file-signatory-controller"
				],
				"summary": "signFileAsFileSignatory",
				"operationId": "signFileAsFileSignatoryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fileSignDTO",
						"description": "fileSignDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FileSignDTO"
						}
					},
					{
						"name": "fileSignatoryId",
						"in": "path",
						"description": "fileSignatoryId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/stamper/files": {
			"post": {
				"tags": [
					"pdf-stamper-controller"
				],
				"summary": "stampFile",
				"operationId": "stampFileUsingPOST",
				"consumes": [
					"multipart/form-data"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "formData",
						"name": "data",
						"description": "data",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "files",
						"in": "formData",
						"description": "files",
						"required": true,
						"type": "array",
						"items": {
							"type": "file"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "pdf",
						"in": "formData",
						"description": "pdf",
						"required": true,
						"type": "file"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/stamper/files/{fileId}/annotations": {
			"post": {
				"tags": [
					"pdf-stamper-controller"
				],
				"summary": "stampAnnotationsToExistingFile",
				"operationId": "stampAnnotationsToExistingFileUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "formData",
						"name": "data",
						"description": "data",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "fileId",
						"in": "path",
						"description": "fileId",
						"required": true,
						"type": "string"
					},
					{
						"name": "files",
						"in": "formData",
						"description": "files",
						"required": true,
						"type": "array",
						"items": {
							"type": "file"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/File"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/stamper/pagesizes": {
			"post": {
				"tags": [
					"pdf-stamper-controller"
				],
				"summary": "getPdfPageSizes",
				"operationId": "getPdfPageSizesUsingPOST",
				"consumes": [
					"multipart/form-data"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "file",
						"in": "formData",
						"description": "file",
						"required": true,
						"type": "file"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PdfPageSizeDTO"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/user": {
			"delete": {
				"tags": [
					"user-controller"
				],
				"summary": "deleteUser",
				"operationId": "deleteUserUsingDELETE",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/activate": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "userActivation",
				"operationId": "userActivationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "userActivationRequest",
						"description": "userActivationRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserActivationRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/chain": {
			"get": {
				"tags": [
					"user-controller"
				],
				"summary": "getUserIdentityChainId",
				"operationId": "getUserIdentityChainIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "query",
						"description": "userId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/checkEmailAvailability": {
			"get": {
				"tags": [
					"user-controller"
				],
				"summary": "checkEmailAvailability",
				"operationId": "checkEmailAvailabilityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "email",
						"in": "query",
						"description": "email",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserIdentityAvailability"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": true
			}
		},
		"/api/user/checkUsernameAvailability": {
			"get": {
				"tags": [
					"user-controller"
				],
				"summary": "checkUsernameAvailability",
				"operationId": "checkUsernameAvailabilityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "username",
						"in": "query",
						"description": "username",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserIdentityAvailability"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": true
			}
		},
		"/api/user/contact": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "createOrUpdateContact",
				"operationId": "createOrUpdateContactUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "userContactsDTO",
						"description": "userContactsDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserContactsDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserContactsDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": [
					"user-controller"
				],
				"summary": "deleteContact",
				"operationId": "deleteContactUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "email",
						"in": "query",
						"description": "email",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/contacts": {
			"get": {
				"tags": [
					"user-controller"
				],
				"summary": "getContacts",
				"operationId": "getContactsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserContactsDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/edit": {
			"put": {
				"tags": [
					"user-controller"
				],
				"summary": "editUser",
				"operationId": "editUserUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "editUserRequest",
						"description": "editUserRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/EditUserRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/emailVerification": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "emailVerification",
				"operationId": "emailVerificationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "emailVerificationRequest",
						"description": "emailVerificationRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/EmailVerificationRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserIdentityAvailability"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/me": {
			"get": {
				"tags": [
					"user-controller"
				],
				"summary": "getCurrentUser",
				"operationId": "getCurrentUserUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "accountNonExpired",
						"in": "query",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "accountNonLocked",
						"in": "query",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "authorities[0].authority",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "credentialsNonExpired",
						"in": "query",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "enabled",
						"in": "query",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "id",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "lastName",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "password",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "username",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": true
			}
		},
		"/api/user/publicKeyVerification": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "publicKeyVerification",
				"operationId": "publicKeyVerificationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "userActivationRequest",
						"description": "userActivationRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserActivationRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserIdentityAvailability"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/reset-password": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "resetUserPassword",
				"operationId": "resetUserPasswordUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "password",
						"in": "query",
						"description": "password",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/settings": {
			"put": {
				"tags": [
					"user-controller"
				],
				"summary": "updateUserSettings",
				"operationId": "updateUserSettingsUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "userSettingsDTO",
						"description": "userSettingsDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserSettingsDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserSettingsDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/signatory-list": {
			"get": {
				"tags": [
					"user-controller"
				],
				"summary": "getSignatoryLists",
				"operationId": "getSignatoryListsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/SignatoryListsDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			},
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "createSignatoryLists",
				"operationId": "createSignatoryListsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "signatoryListsRequest",
						"description": "signatoryListsRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SignatoryListsRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SignatoryListsDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": [
					"user-controller"
				],
				"summary": "deleteSignatoryList",
				"operationId": "deleteSignatoryListUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "signatoryListId",
						"in": "query",
						"description": "signatoryListId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"deprecated": false
			}
		},
		"/api/user/signatory-list-id": {
			"get": {
				"tags": [
					"user-controller"
				],
				"summary": "getSignatoryListById",
				"operationId": "getSignatoryListByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "signatoryListId",
						"in": "query",
						"description": "signatoryListId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SignatoryListsDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/users/contacts": {
			"get": {
				"tags": [
					"user-controller"
				],
				"summary": "getUserContactsByNameOrLastNameOrEmail",
				"security": [{"oauth2schema": ["global"]}],
				"operationId": "getUserContactsByNameOrLastNameOrEmailUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserProfile"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/users/{username}": {
			"get": {
				"tags": [
					"user-controller"
				],
				"summary": "getUserProfile",
				"operationId": "getUserProfileUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "username",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserProfile"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/customers": {
			"post": {
				"tags": [
					"customer-controller"
				],
				"summary": "createCustomer",
				"operationId": "createCustomerUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createCustomerRequest",
						"description": "createCustomerRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateCustomerRequestDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Customer"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/customers/groups": {
			"post": {
				"tags": [
					"customer-controller"
				],
				"summary": "createGroupCustomer",
				"operationId": "createGroupCustomerUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createCustomerRequest",
						"description": "createCustomerRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateCustomerGroupRequestDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Customer"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/customers/{customerId}": {
			"get": {
				"tags": [
					"customer-controller"
				],
				"summary": "getCustomer",
				"operationId": "getCustomerUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "customerId",
						"in": "path",
						"description": "customerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Customer"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/customers/{customerId}/checkout": {
			"post": {
				"tags": [
					"customer-controller"
				],
				"summary": "createCheckoutSession",
				"operationId": "createCheckoutSessionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createCheckoutSessionRequest",
						"description": "createCheckoutSessionRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateCheckoutSessionRequestDTO"
						}
					},
					{
						"name": "customerId",
						"in": "path",
						"description": "customerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/StripePaymentSession"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/customers/{customerId}/subscriptions": {
			"get": {
				"tags": [
					"customer-controller"
				],
				"summary": "getSubscriptions",
				"operationId": "getSubscriptionsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "customerId",
						"in": "path",
						"description": "customerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SubscriptionResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			},
			"post": {
				"tags": [
					"customer-controller"
				],
				"summary": "createSubscription",
				"operationId": "createSubscriptionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createSubscriptionRequest",
						"description": "createSubscriptionRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateSubscriptionRequestDTO"
						}
					},
					{
						"name": "customerId",
						"in": "path",
						"description": "customerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/StripeSubscription"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/customers/{customerId}/subscriptions/{subscriptionId}": {
			"put": {
				"tags": [
					"customer-controller"
				],
				"summary": "updateSubscription",
				"operationId": "updateSubscriptionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "customerId",
						"in": "path",
						"description": "customerId",
						"required": true,
						"type": "string"
					},
					{
						"name": "subscriptionId",
						"in": "path",
						"description": "subscriptionId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "updateSubscriptionRequestDTO",
						"description": "updateSubscriptionRequestDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UpdateSubscriptionRequestDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/StripeSubscription"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/customers/{customerId}/subscriptions/{subscriptionId}/{priceId}/invoice": {
			"get": {
				"tags": [
					"customer-controller"
				],
				"summary": "getUpcomingInvoice",
				"operationId": "getUpcomingInvoiceUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "customerId",
						"in": "path",
						"description": "customerId",
						"required": true,
						"type": "string"
					},
					{
						"name": "priceId",
						"in": "path",
						"description": "priceId",
						"required": true,
						"type": "string"
					},
					{
						"name": "subscriptionId",
						"in": "path",
						"description": "subscriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Invoice"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/groups": {
			"get": {
				"tags": [
					"Groups"
				],
				"summary": "Get groups",
				"operationId": "getGroups",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the amount of records from the result set to the specified amount. Should be used in combination with skip.",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "names",
						"in": "query",
						"description": "names",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "skip",
						"in": "query",
						"description": "Skip the specified amount of records from the result set. Can be used in combination with Limit.",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Should be used in value pairs, fieldname and sort order. An implementation may or may not support the use of multiple value pairs.",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "subscriptionNames",
						"in": "query",
						"description": "subscriptionNames",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "types",
						"in": "query",
						"description": "types",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "userId",
						"in": "query",
						"description": "userId",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GroupResponse"
							}
						}
					},
					"206": {
						"description": "Groups fetched succesfully",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GroupResponse"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					},
					"416": {
						"description": "Range Not Satisfiable"
					}
				},
				"deprecated": false
			},
			"post": {
				"tags": [
					"Groups"
				],
				"summary": "Add a group",
				"operationId": "addGroup",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "group",
						"description": "group",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Group"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Group added succesfully",
						"schema": {
							"$ref": "#/definitions/GroupResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/groups/{groupId}": {
			"get": {
				"tags": [
					"Groups"
				],
				"summary": "Get group by ID",
				"operationId": "getGroupById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "groupId",
						"in": "path",
						"description": "ID of group",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Group fetched succesfully",
						"schema": {
							"$ref": "#/definitions/GroupResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Group does not exist"
					}
				},
				"deprecated": false
			},
			"put": {
				"tags": [
					"Groups"
				],
				"summary": "Update a group by ID",
				"operationId": "updateGroupById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "group",
						"description": "group",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Group"
						}
					},
					{
						"name": "groupId",
						"in": "path",
						"description": "ID of group",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Group updated succesfully",
						"schema": {
							"$ref": "#/definitions/GroupResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Group does not exist"
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": [
					"Groups"
				],
				"summary": "Deletes a group by ID",
				"operationId": "deleteGroupById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "groupId",
						"in": "path",
						"description": "ID of group",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Group deleted succesfully",
						"schema": {
							"$ref": "#/definitions/GroupResponse"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Group does not exist"
					},
					"409": {
						"description": "Conflict in request, such as group still containing users whilst trying to delete."
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/groups/{groupId}/users": {
			"post": {
				"tags": [
					"Groups"
				],
				"summary": "Add users to a group",
				"operationId": "addUsersToGroup",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "groupId",
						"in": "path",
						"description": "ID of group",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "groupUsers",
						"description": "groupUsers",
						"required": true,
						"schema": {
							"$ref": "#/definitions/GroupUsers"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/GroupUsersResponse"
						}
					},
					"201": {
						"description": "Users added to group succesfully",
						"schema": {
							"$ref": "#/definitions/GroupUsersResponse"
						}
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Group and or user does not exist"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/groups/{groupId}/users/{userId}": {
			"delete": {
				"tags": [
					"Groups"
				],
				"summary": "Remove a user from a group",
				"operationId": "removeUserFromGroup",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "groupId",
						"in": "path",
						"description": "ID of group",
						"required": true,
						"type": "string"
					},
					{
						"name": "userId",
						"in": "path",
						"description": "ID of user",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "User removed from group succesfully",
						"schema": {
							"$ref": "#/definitions/GroupUsersResponse"
						}
					},
					"204": {
						"description": "No Content"
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Group and or user does not exist"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/products": {
			"get": {
				"tags": [
					"product-controller"
				],
				"summary": "getProducts",
				"operationId": "getProductsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "limit",
						"in": "query",
						"description": "limit",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProductInfoDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/products/{productId}": {
			"get": {
				"tags": [
					"product-controller"
				],
				"summary": "getProduct",
				"operationId": "getProductUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "productId",
						"in": "path",
						"description": "productId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ProductInfoDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/user/managed": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "createManagedUser",
				"operationId": "createManagedUserUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createManagedUserRequest",
						"description": "createManagedUserRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CreateManagedUserRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/users": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Get users",
				"operationId": "getUsers",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "firstNames",
						"in": "query",
						"description": "firstNames",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "groupId",
						"in": "query",
						"description": "groupId",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "lastNames",
						"in": "query",
						"description": "lastNames",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the amount of records from the result set to the specified amount. Should be used in combination with skip.",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "skip",
						"in": "query",
						"description": "Skip the specified amount of records from the result set. Can be used in combination with Limit.",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Should be used in value pairs, fieldname and sort order. An implementation may or may not support the use of multiple value pairs.",
						"required": false,
						"type": "string",
						"allowEmptyValue": false
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserResponse"
							}
						}
					},
					"206": {
						"description": "Users fetched succesfully",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserResponse"
							}
						}
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					},
					"416": {
						"description": "Range Not Satisfiable"
					}
				},
				"deprecated": false
			},
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Add a new user",
				"operationId": "addUser",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "user",
						"description": "user",
						"required": true,
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserResponse"
						}
					},
					"201": {
						"description": "User added succesfully",
						"schema": {
							"$ref": "#/definitions/UserResponse"
						}
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/users/invitations": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "inviteUser",
				"operationId": "inviteUserUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "userInvitationRequest",
						"description": "userInvitationRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserInvitationRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/users/verifications": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "initiateVerification",
				"operationId": "initiateVerificationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"description": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/VerificationInitiateRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/VerificationResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/users/verifications/{verificationId}": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "confirmVerification",
				"operationId": "confirmVerificationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "verificationId",
						"in": "path",
						"description": "verificationId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/VerificationResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/users/{userId}": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Get user by ID",
				"operationId": "getUserById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "ID of user",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "User fetched succesfully",
						"schema": {
							"$ref": "#/definitions/UserResponse"
						}
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "User does not exist"
					}
				},
				"deprecated": false
			},
			"put": {
				"tags": [
					"Users"
				],
				"summary": "Update a user by ID",
				"operationId": "updateUserById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "user",
						"description": "user",
						"required": true,
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"description": "ID of user",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "User updated succesfully",
						"schema": {
							"$ref": "#/definitions/UserResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "User does not exist"
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": [
					"Users"
				],
				"summary": "Delete a user by ID",
				"operationId": "deleteUserById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "ID of user",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "User deleted succesfully",
						"schema": {
							"$ref": "#/definitions/UserResponse"
						}
					},
					"204": {
						"description": "No Content"
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "User does not exist"
					}
				},
				"deprecated": false
			}
		},
		"/api/v1/users/{userId}/password/reset": {
			"post": {
				"tags": [
					"user-controller"
				],
				"summary": "initiatePasswordReset",
				"operationId": "initiatePasswordResetUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "userId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/version": {
			"post": {
				"tags": [
					"app-version-controller"
				],
				"summary": "setVersion",
				"operationId": "setVersionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "appVersion",
						"description": "appVersion",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AppVersion"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/version/latest": {
			"get": {
				"tags": [
					"app-version-controller"
				],
				"summary": "getLatestVersion",
				"operationId": "getLatestVersionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "operatingSystem",
						"in": "query",
						"description": "operatingSystem",
						"required": true,
						"type": "string",
						"enum": [
							"android",
							"ios"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AppVersionResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/api/version/minimum": {
			"get": {
				"tags": [
					"app-version-controller"
				],
				"summary": "getMinimumVersion",
				"operationId": "getMinimumVersionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "operatingSystem",
						"in": "query",
						"description": "operatingSystem",
						"required": true,
						"type": "string",
						"enum": [
							"android",
							"ios"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AppVersionResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		}
	},
	"definitions": {
		"AnnotationDTO": {
			"type": "object",
			"properties": {
				"fontSize": {
					"type": "number",
					"format": "float"
				},
				"height": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "string"
				},
				"page": {
					"type": "integer",
					"format": "int32"
				},
				"signatoryEmailAddress": {
					"$ref": "#/definitions/Optional«string»"
				},
				"type": {
					"type": "string",
					"enum": [
						"SIGNATURE",
						"CHECKBOX",
						"QR",
						"TEXT",
						"DATE",
						"NAME"
					]
				},
				"value": {
					"type": "string"
				},
				"width": {
					"type": "number",
					"format": "float"
				},
				"x": {
					"type": "number",
					"format": "float"
				},
				"y": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "AnnotationDTO"
		},
		"ApiResponse": {
			"type": "object",
			"properties": {
				"message": {
					"type": "string"
				},
				"success": {
					"type": "boolean"
				}
			},
			"title": "ApiResponse"
		},
		"AppVersion": {
			"type": "object",
			"properties": {
				"appVersion": {
					"type": "string"
				},
				"appVersionStatus": {
					"type": "string",
					"enum": [
						"SUPPORTED",
						"DEPRECATED"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"phoneOS": {
					"type": "string",
					"enum": [
						"android",
						"ios"
					]
				}
			},
			"title": "AppVersion"
		},
		"AppVersionResponse": {
			"type": "object",
			"properties": {
				"version": {
					"type": "string"
				}
			},
			"title": "AppVersionResponse"
		},
		"AuditResponse": {
			"type": "object",
			"properties": {
				"blockchainEvents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BlockchainEvent"
					}
				},
				"fileDetails": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FileDTO"
					}
				}
			},
			"title": "AuditResponse"
		},
		"BlockchainEvent": {
			"type": "object",
			"properties": {
				"blockchainEvidencePointers": {
					"$ref": "#/definitions/BlockchainEvidence"
				},
				"eventRole": {
					"type": "string",
					"enum": [
						"ObjectCreator",
						"ObjectCreatorPF",
						"ObjectSigner",
						"EvidenceCreator",
						"NotarizeCreator",
						"OriginalChainId",
						"nextAnnotationSigner"
					]
				},
				"userProfile": {
					"$ref": "#/definitions/UserProfile"
				}
			},
			"title": "BlockchainEvent"
		},
		"BlockchainEvidence": {
			"type": "object",
			"properties": {
				"context": {
					"type": "string"
				},
				"identityChainId": {
					"type": "string"
				},
				"identityEntryId": {
					"type": "string"
				},
				"identityReplaySignature": {
					"type": "string"
				},
				"objectChainId": {
					"type": "string"
				},
				"objectEntryAnchorTime": {
					"type": "string",
					"format": "date-time"
				},
				"objectEntryId": {
					"type": "string"
				},
				"objectReplaySignature": {
					"type": "string"
				}
			},
			"title": "BlockchainEvidence"
		},
		"CreateCheckoutSessionRequestDTO": {
			"type": "object",
			"properties": {
				"baseURL": {
					"type": "string"
				},
				"priceId": {
					"type": "string"
				}
			},
			"title": "CreateCheckoutSessionRequestDTO"
		},
		"CreateCustomerGroupRequestDTO": {
			"type": "object",
			"properties": {
				"emailAddress": {
					"type": "string"
				},
				"groupId": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "CreateCustomerGroupRequestDTO"
		},
		"CreateCustomerRequestDTO": {
			"type": "object",
			"properties": {
				"emailAddress": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "CreateCustomerRequestDTO"
		},
		"CreateManagedUserRequest": {
			"type": "object",
			"properties": {
				"emailAddress": {
					"type": "string"
				},
				"organizationName": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"token": {
					"type": "string"
				}
			},
			"title": "CreateManagedUserRequest"
		},
		"CreateSubscriptionRequestDTO": {
			"type": "object",
			"properties": {
				"paymentMethodId": {
					"type": "string"
				},
				"priceId": {
					"type": "string"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "CreateSubscriptionRequestDTO"
		},
		"Customer": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"subscriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/StripeSubscription"
					}
				}
			},
			"title": "Customer"
		},
		"EditUserRequest": {
			"type": "object",
			"properties": {
				"company": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"jobTitle": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"signatoryListsDTO": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SignatoryListsDTO"
					}
				},
				"staffNumber": {
					"type": "string"
				}
			},
			"title": "EditUserRequest"
		},
		"EmailVerificationRequest": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"pin": {
					"type": "string"
				}
			},
			"title": "EmailVerificationRequest"
		},
		"File": {
			"type": "object",
			"properties": {
				"absolute": {
					"type": "boolean"
				},
				"absoluteFile": {
					"$ref": "#/definitions/File"
				},
				"absolutePath": {
					"type": "string"
				},
				"annotationHash": {
					"type": "string"
				},
				"annotationObjectChainId": {
					"type": "string"
				},
				"annotations": {
					"type": "string"
				},
				"blockchainEventRole": {
					"type": "string"
				},
				"canonicalFile": {
					"$ref": "#/definitions/File"
				},
				"canonicalPath": {
					"type": "string"
				},
				"certificateFile": {
					"type": "string"
				},
				"chainStatus": {
					"type": "string"
				},
				"container": {
					"type": "string"
				},
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"createdBy": {
					"type": "string"
				},
				"customId": {
					"type": "string"
				},
				"deviceID": {
					"type": "string"
				},
				"directory": {
					"type": "boolean"
				},
				"executable": {
					"type": "boolean"
				},
				"expiryDate": {
					"type": "string",
					"format": "date-time"
				},
				"file": {
					"type": "boolean"
				},
				"fileName": {
					"type": "string"
				},
				"filePath": {
					"type": "string"
				},
				"fileTitle": {
					"type": "string"
				},
				"freeSpace": {
					"type": "integer",
					"format": "int64"
				},
				"hasExpired": {
					"type": "boolean"
				},
				"hasReject": {
					"type": "boolean"
				},
				"hash": {
					"type": "string"
				},
				"hidden": {
					"type": "boolean"
				},
				"id": {
					"type": "string"
				},
				"initialStorageFileName": {
					"type": "string"
				},
				"isCreatorSigner": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isEvidence": {
					"type": "boolean"
				},
				"isOrdered": {
					"type": "boolean"
				},
				"isSigningCompleted": {
					"type": "boolean"
				},
				"lastModified": {
					"type": "integer",
					"format": "int64"
				},
				"latitude": {
					"type": "string"
				},
				"longitude": {
					"type": "string"
				},
				"modifiedName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"newAnnotationChainId": {
					"type": "string"
				},
				"newAnnotationHash": {
					"type": "string"
				},
				"newestStorageFileName": {
					"type": "string"
				},
				"objectChainId": {
					"type": "string"
				},
				"parent": {
					"type": "string"
				},
				"parentFile": {
					"$ref": "#/definitions/File"
				},
				"path": {
					"type": "string"
				},
				"preAnnotationChainId": {
					"type": "string"
				},
				"preAnnotationHash": {
					"type": "string"
				},
				"readable": {
					"type": "boolean"
				},
				"scheme": {
					"type": "integer",
					"format": "int32"
				},
				"signedHash": {
					"type": "string"
				},
				"storageId": {
					"type": "string"
				},
				"totalSignedBy": {
					"type": "integer",
					"format": "int32"
				},
				"totalSigners": {
					"type": "integer",
					"format": "int32"
				},
				"totalSpace": {
					"type": "integer",
					"format": "int64"
				},
				"type": {
					"type": "string"
				},
				"updatedAt": {
					"type": "string",
					"format": "date-time"
				},
				"updatedBy": {
					"type": "string"
				},
				"usableSpace": {
					"type": "integer",
					"format": "int64"
				},
				"writable": {
					"type": "boolean"
				}
			},
			"title": "File"
		},
		"FileDTO": {
			"type": "object",
			"properties": {
				"blockchainEventRole": {
					"type": "string"
				},
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"createdBy": {
					"type": "string"
				},
				"createdByProfile": {
					"$ref": "#/definitions/UserProfile"
				},
				"expiryDate": {
					"type": "string",
					"format": "date-time"
				},
				"fileAnnotations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AnnotationDTO"
					}
				},
				"fileName": {
					"type": "string"
				},
				"fileSignatories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FileSignatoriesDTO"
					}
				},
				"fileTitle": {
					"type": "string"
				},
				"hasExpired": {
					"type": "boolean"
				},
				"hasManagedUserSign": {
					"type": "boolean"
				},
				"hash": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"isEvidence": {
					"type": "boolean"
				},
				"isOrdered": {
					"type": "boolean"
				},
				"isSigningCompleted": {
					"type": "boolean"
				},
				"latitude": {
					"type": "string"
				},
				"longitude": {
					"type": "string"
				},
				"managedUserEmail": {
					"type": "string"
				},
				"modifiedName": {
					"type": "string"
				},
				"newAnnotationChainId": {
					"type": "string"
				},
				"newAnnotationHash": {
					"type": "string"
				},
				"objectChainId": {
					"type": "string"
				},
				"pageSizes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PdfPageSizeDTO"
					}
				},
				"preAnnotationChainId": {
					"type": "string"
				},
				"preAnnotationHash": {
					"type": "string"
				},
				"totalSigners": {
					"type": "integer",
					"format": "int32"
				},
				"type": {
					"type": "string"
				}
			},
			"title": "FileDTO"
		},
		"FileDetailsDTO": {
			"type": "object",
			"properties": {
				"blockchainEventRole": {
					"type": "string"
				},
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"createdBy": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"fileId": {
					"type": "string"
				},
				"fileName": {
					"type": "string"
				},
				"fileTitle": {
					"type": "string"
				},
				"fileType": {
					"type": "string"
				},
				"hasExpired": {
					"type": "boolean"
				},
				"hasReject": {
					"type": "boolean"
				},
				"hash": {
					"type": "string"
				},
				"isCreatorSigner": {
					"type": "boolean"
				},
				"isEvidence": {
					"type": "boolean"
				},
				"isOrdered": {
					"type": "boolean"
				},
				"isProcessed": {
					"type": "boolean"
				},
				"isSigned": {
					"type": "boolean"
				},
				"isSigningCompleted": {
					"type": "boolean"
				},
				"modifiedName": {
					"type": "string"
				},
				"newAnnotationHash": {
					"type": "string"
				},
				"revisionDate": {
					"type": "string",
					"format": "date-time"
				},
				"totalSignedBy": {
					"type": "integer",
					"format": "int32"
				},
				"totalSigners": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "FileDetailsDTO"
		},
		"FileRequest": {
			"type": "object",
			"properties": {
				"blockchainEventRole": {
					"type": "string"
				},
				"customId": {
					"type": "string"
				},
				"deviceID": {
					"type": "string"
				},
				"expiryDate": {
					"type": "string",
					"format": "date-time"
				},
				"fileAnnotations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AnnotationDTO"
					}
				},
				"fileName": {
					"type": "string"
				},
				"fileTitle": {
					"type": "string"
				},
				"hash": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"isOrdered": {
					"type": "boolean"
				},
				"latitude": {
					"type": "string"
				},
				"longitude": {
					"type": "string"
				},
				"originalChainId": {
					"type": "string"
				},
				"replayObjectContent": {
					"type": "string"
				},
				"signatories": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/UserContactsDTO"
					}
				},
				"signedHash": {
					"type": "string"
				},
				"signedObjectContent": {
					"type": "string"
				},
				"timestamp": {
					"type": "string",
					"format": "date-time"
				},
				"totalSigners": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "FileRequest"
		},
		"FileSignDTO": {
			"type": "object",
			"properties": {
				"fileSignatoryData": {
					"$ref": "#/definitions/FileSignatoryDTO"
				},
				"storageFile": {
					"$ref": "#/definitions/Optional«StorageFileDTO»"
				}
			},
			"title": "FileSignDTO"
		},
		"FileSignatoriesDTO": {
			"type": "object",
			"properties": {
				"annotatedFileChainId": {
					"type": "string"
				},
				"annotatedFileHash": {
					"type": "string"
				},
				"annotatedFileId": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isProcessed": {
					"type": "boolean"
				},
				"isSigned": {
					"type": "boolean"
				},
				"revisionDate": {
					"type": "string",
					"format": "date-time"
				},
				"signatoriesOrder": {
					"type": "integer",
					"format": "int32"
				},
				"userProfile": {
					"$ref": "#/definitions/UserProfile"
				}
			},
			"title": "FileSignatoriesDTO"
		},
		"FileSignatoryDTO": {
			"type": "object",
			"properties": {
				"annotationObjectChainId": {
					"type": "string"
				},
				"fileAnnotations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AnnotationDTO"
					}
				},
				"fileId": {
					"type": "string"
				},
				"isSigned": {
					"type": "boolean"
				},
				"replaySignatureContent": {
					"type": "string"
				},
				"signatureTimestamp": {
					"type": "string",
					"format": "date-time"
				},
				"signedHash": {
					"type": "string"
				}
			},
			"title": "FileSignatoryDTO"
		},
		"FileStatisticsDTO": {
			"type": "object",
			"properties": {
				"completed": {
					"type": "integer",
					"format": "int64"
				},
				"expiringSoon": {
					"type": "integer",
					"format": "int64"
				},
				"inProgress": {
					"type": "integer",
					"format": "int64"
				},
				"requiresMySignature": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "FileStatisticsDTO"
		},
		"FileVersionedSignatoryDTO": {
			"type": "object",
			"properties": {
				"fileId": {
					"type": "string"
				},
				"isSigned": {
					"type": "boolean"
				},
				"newChainFirstContent": {
					"type": "string"
				},
				"newChainSecondContent": {
					"type": "string"
				},
				"newChainSignerContent": {
					"type": "string"
				},
				"orgChainSignerContent": {
					"type": "string"
				},
				"prevChainSignerContent": {
					"type": "string"
				},
				"signatureTimestamp": {
					"type": "string",
					"format": "date-time"
				},
				"signedHashNew": {
					"type": "string"
				},
				"signedHashOriginal": {
					"type": "string"
				},
				"signedHashPrevious": {
					"type": "string"
				}
			},
			"title": "FileVersionedSignatoryDTO"
		},
		"Group": {
			"type": "object",
			"properties": {
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"createdBy": {
					"type": "string"
				},
				"groupTypeCode": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"stripeCustomerId": {
					"type": "string"
				},
				"updatedAt": {
					"type": "string",
					"format": "date-time"
				},
				"updatedBy": {
					"type": "string"
				},
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/User"
					}
				}
			},
			"title": "Group"
		},
		"GroupDTO": {
			"type": "object",
			"properties": {
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"createdBy": {
					"type": "string"
				},
				"customerId": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"updatedAt": {
					"type": "string",
					"format": "date-time"
				},
				"updatedBy": {
					"type": "string"
				},
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserProfile"
					}
				}
			},
			"title": "GroupDTO"
		},
		"GroupResponse": {
			"type": "object",
			"required": [
				"name",
				"type"
			],
			"properties": {
				"createdAt": {
					"type": "string",
					"format": "date-time",
					"example": "2020-07-21T17:32:28Z"
				},
				"id": {
					"type": "string",
					"example": "5ac96e2a-06f0-11eb-adc1-0242ac120002"
				},
				"name": {
					"type": "string",
					"example": "company"
				},
				"subscription": {
					"$ref": "#/definitions/Subscription"
				},
				"type": {
					"type": "string",
					"enum": [
						"ORGANIZATION"
					]
				},
				"updatedAt": {
					"type": "string",
					"format": "date-time",
					"example": "2020-07-21T18:32:28Z"
				},
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserResponse"
					}
				}
			},
			"title": "GroupResponse"
		},
		"GroupUsers": {
			"type": "object",
			"properties": {
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserToGroup"
					}
				}
			},
			"title": "GroupUsers",
			"xml": {
				"name": "GroupUsers",
				"attribute": false,
				"wrapped": false
			}
		},
		"GroupUsersResponse": {
			"type": "object",
			"properties": {
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserResponse"
					}
				}
			},
			"title": "GroupUsersResponse"
		},
		"InputStream": {
			"type": "object",
			"title": "InputStream"
		},
		"Invoice": {
			"type": "object",
			"properties": {
				"currency": {
					"type": "string"
				},
				"invoiceLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/InvoiceLine"
					}
				},
				"subtotal": {
					"type": "integer",
					"format": "int64"
				},
				"total": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Invoice"
		},
		"InvoiceLine": {
			"type": "object",
			"properties": {
				"amount": {
					"type": "integer",
					"format": "int64"
				},
				"currency": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"invoiceLinePeriod": {
					"$ref": "#/definitions/InvoiceLinePeriod"
				}
			},
			"title": "InvoiceLine"
		},
		"InvoiceLinePeriod": {
			"type": "object",
			"properties": {
				"end": {
					"type": "integer",
					"format": "int64"
				},
				"start": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "InvoiceLinePeriod"
		},
		"JwtAuthenticationResponse": {
			"type": "object",
			"properties": {
				"accessToken": {
					"type": "string"
				},
				"blockchainId": {
					"type": "string"
				},
				"customerId": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"groups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GroupDTO"
					}
				},
				"id": {
					"type": "string"
				},
				"joinedAt": {
					"type": "string",
					"format": "date-time"
				},
				"lastName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Role"
					}
				},
				"staffNumber": {
					"type": "string"
				},
				"tokenType": {
					"type": "string"
				},
				"userSettingsDTO": {
					"$ref": "#/definitions/UserSettingsDTO"
				}
			},
			"title": "JwtAuthenticationResponse"
		},
		"LoginRequest": {
			"type": "object",
			"properties": {
				"deviceId": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"usernameOrEmail": {
					"type": "string"
				}
			},
			"title": "LoginRequest"
		},
		"Optional«StorageFileDTO»": {
			"type": "object",
			"properties": {
				"empty": {
					"type": "boolean"
				},
				"present": {
					"type": "boolean"
				}
			},
			"title": "Optional«StorageFileDTO»"
		},
		"Optional«string»": {
			"type": "object",
			"properties": {
				"empty": {
					"type": "boolean"
				},
				"present": {
					"type": "boolean"
				}
			},
			"title": "Optional«string»"
		},
		"PdfPageSizeDTO": {
			"type": "object",
			"properties": {
				"height": {
					"type": "number",
					"format": "float"
				},
				"page": {
					"type": "integer",
					"format": "int32"
				},
				"width": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "PdfPageSizeDTO"
		},
		"Product": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"example": "product_ID123"
				},
				"name": {
					"type": "string",
					"example": "Test product"
				}
			},
			"title": "Product"
		},
		"ProductInfoDTO": {
			"type": "object",
			"properties": {
				"limits": {
					"type": "object",
					"additionalProperties": {
						"type": "integer",
						"format": "int32"
					}
				},
				"permissions": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"WEB_PORTAL_PERMISSION",
							"SIGNING_PERMISSION",
							"REQUEST_PERMISSION",
							"CONTACTS_PERMISSION"
						]
					}
				},
				"prices": {
					"type": "object",
					"additionalProperties": {
						"type": "integer",
						"format": "int64"
					}
				},
				"productId": {
					"type": "string"
				},
				"productName": {
					"type": "string"
				}
			},
			"title": "ProductInfoDTO"
		},
		"Resource": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"file": {
					"$ref": "#/definitions/File"
				},
				"filename": {
					"type": "string"
				},
				"inputStream": {
					"$ref": "#/definitions/InputStream"
				},
				"open": {
					"type": "boolean"
				},
				"readable": {
					"type": "boolean"
				},
				"uri": {
					"$ref": "#/definitions/URI"
				},
				"url": {
					"$ref": "#/definitions/URL"
				}
			},
			"title": "Resource"
		},
		"ResponseEntity": {
			"type": "object",
			"properties": {
				"body": {
					"type": "object"
				},
				"statusCode": {
					"type": "string",
					"enum": [
						"100 CONTINUE",
						"101 SWITCHING_PROTOCOLS",
						"102 PROCESSING",
						"103 CHECKPOINT",
						"200 OK",
						"201 CREATED",
						"202 ACCEPTED",
						"203 NON_AUTHORITATIVE_INFORMATION",
						"204 NO_CONTENT",
						"205 RESET_CONTENT",
						"206 PARTIAL_CONTENT",
						"207 MULTI_STATUS",
						"208 ALREADY_REPORTED",
						"226 IM_USED",
						"300 MULTIPLE_CHOICES",
						"301 MOVED_PERMANENTLY",
						"302 FOUND",
						"302 MOVED_TEMPORARILY",
						"303 SEE_OTHER",
						"304 NOT_MODIFIED",
						"305 USE_PROXY",
						"307 TEMPORARY_REDIRECT",
						"308 PERMANENT_REDIRECT",
						"400 BAD_REQUEST",
						"401 UNAUTHORIZED",
						"402 PAYMENT_REQUIRED",
						"403 FORBIDDEN",
						"404 NOT_FOUND",
						"405 METHOD_NOT_ALLOWED",
						"406 NOT_ACCEPTABLE",
						"407 PROXY_AUTHENTICATION_REQUIRED",
						"408 REQUEST_TIMEOUT",
						"409 CONFLICT",
						"410 GONE",
						"411 LENGTH_REQUIRED",
						"412 PRECONDITION_FAILED",
						"413 PAYLOAD_TOO_LARGE",
						"413 REQUEST_ENTITY_TOO_LARGE",
						"414 URI_TOO_LONG",
						"414 REQUEST_URI_TOO_LONG",
						"415 UNSUPPORTED_MEDIA_TYPE",
						"416 REQUESTED_RANGE_NOT_SATISFIABLE",
						"417 EXPECTATION_FAILED",
						"418 I_AM_A_TEAPOT",
						"419 INSUFFICIENT_SPACE_ON_RESOURCE",
						"420 METHOD_FAILURE",
						"421 DESTINATION_LOCKED",
						"422 UNPROCESSABLE_ENTITY",
						"423 LOCKED",
						"424 FAILED_DEPENDENCY",
						"426 UPGRADE_REQUIRED",
						"428 PRECONDITION_REQUIRED",
						"429 TOO_MANY_REQUESTS",
						"431 REQUEST_HEADER_FIELDS_TOO_LARGE",
						"451 UNAVAILABLE_FOR_LEGAL_REASONS",
						"500 INTERNAL_SERVER_ERROR",
						"501 NOT_IMPLEMENTED",
						"502 BAD_GATEWAY",
						"503 SERVICE_UNAVAILABLE",
						"504 GATEWAY_TIMEOUT",
						"505 HTTP_VERSION_NOT_SUPPORTED",
						"506 VARIANT_ALSO_NEGOTIATES",
						"507 INSUFFICIENT_STORAGE",
						"508 LOOP_DETECTED",
						"509 BANDWIDTH_LIMIT_EXCEEDED",
						"510 NOT_EXTENDED",
						"511 NETWORK_AUTHENTICATION_REQUIRED"
					]
				},
				"statusCodeValue": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "ResponseEntity"
		},
		"Role": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string",
					"enum": [
						"ROLE_USER",
						"ROLE_ADMIN",
						"ROLE_SUPER_ADMIN"
					]
				}
			},
			"title": "Role"
		},
		"SignUpRequest": {
			"type": "object",
			"properties": {
				"business": {
					"type": "boolean"
				},
				"deviceId": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"managedUser": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"publicKey": {
					"type": "string"
				},
				"staffNumber": {
					"type": "string"
				},
				"username": {
					"type": "string"
				}
			},
			"title": "SignUpRequest"
		},
		"SignatoriesDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"signatoriesOrder": {
					"type": "integer",
					"format": "int32"
				},
				"userProfile": {
					"$ref": "#/definitions/UserProfile"
				}
			},
			"title": "SignatoriesDTO"
		},
		"SignatoryListsDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"signatories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SignatoriesDTO"
					}
				}
			},
			"title": "SignatoryListsDTO"
		},
		"SignatoryListsRequest": {
			"type": "object",
			"properties": {
				"listName": {
					"type": "string"
				},
				"signatories": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"signatoryListId": {
					"type": "string"
				},
				"userId": {
					"type": "string"
				}
			},
			"title": "SignatoryListsRequest"
		},
		"SignatureLimitsDTO": {
			"type": "object",
			"properties": {
				"maximumAmountOfSignatures": {
					"type": "integer",
					"format": "int32"
				},
				"maximumCheckIntervalInDays": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfSignatures": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SignatureLimitsDTO"
		},
		"StorageFileDTO": {
			"type": "object",
			"properties": {
				"annotationHash": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"initialStorageFileName": {
					"type": "string"
				},
				"modifiedName": {
					"type": "string"
				},
				"newestStorageFileName": {
					"type": "string"
				}
			},
			"title": "StorageFileDTO"
		},
		"StripePaymentSession": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				}
			},
			"title": "StripePaymentSession"
		},
		"StripeSubscription": {
			"type": "object",
			"properties": {
				"active": {
					"type": "boolean"
				},
				"customerId": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"productId": {
					"type": "string"
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVE",
						"PAST_DUE",
						"UNPAID",
						"CANCELED",
						"INCOMPLETE",
						"INCOMPLETE_EXPIRED",
						"TRAILING"
					]
				}
			},
			"title": "StripeSubscription"
		},
		"Subscription": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"example": "subscription_ID123"
				},
				"product": {
					"$ref": "#/definitions/Product"
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVE",
						"PAST_DUE",
						"UNPAID",
						"CANCELED",
						"INCOMPLETE",
						"INCOMPLETE_EXPIRED",
						"TRAILING"
					]
				}
			},
			"title": "Subscription"
		},
		"SubscriptionDTO": {
			"type": "object",
			"properties": {
				"productId": {
					"type": "string"
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVE",
						"PAST_DUE",
						"UNPAID",
						"CANCELED",
						"INCOMPLETE",
						"INCOMPLETE_EXPIRED",
						"TRAILING"
					]
				}
			},
			"title": "SubscriptionDTO"
		},
		"SubscriptionResponse": {
			"type": "object",
			"properties": {
				"subscriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SubscriptionDTO"
					}
				}
			},
			"title": "SubscriptionResponse"
		},
		"URI": {
			"type": "object",
			"properties": {
				"absolute": {
					"type": "boolean"
				},
				"authority": {
					"type": "string"
				},
				"fragment": {
					"type": "string"
				},
				"host": {
					"type": "string"
				},
				"opaque": {
					"type": "boolean"
				},
				"path": {
					"type": "string"
				},
				"port": {
					"type": "integer",
					"format": "int32"
				},
				"query": {
					"type": "string"
				},
				"rawAuthority": {
					"type": "string"
				},
				"rawFragment": {
					"type": "string"
				},
				"rawPath": {
					"type": "string"
				},
				"rawQuery": {
					"type": "string"
				},
				"rawSchemeSpecificPart": {
					"type": "string"
				},
				"rawUserInfo": {
					"type": "string"
				},
				"scheme": {
					"type": "string"
				},
				"schemeSpecificPart": {
					"type": "string"
				},
				"userInfo": {
					"type": "string"
				}
			},
			"title": "URI"
		},
		"URL": {
			"type": "object",
			"properties": {
				"authority": {
					"type": "string"
				},
				"content": {
					"type": "object"
				},
				"defaultPort": {
					"type": "integer",
					"format": "int32"
				},
				"deserializedFields": {
					"$ref": "#/definitions/URLStreamHandler"
				},
				"file": {
					"type": "string"
				},
				"host": {
					"type": "string"
				},
				"path": {
					"type": "string"
				},
				"port": {
					"type": "integer",
					"format": "int32"
				},
				"protocol": {
					"type": "string"
				},
				"query": {
					"type": "string"
				},
				"ref": {
					"type": "string"
				},
				"serializedHashCode": {
					"type": "integer",
					"format": "int32"
				},
				"userInfo": {
					"type": "string"
				}
			},
			"title": "URL"
		},
		"URLStreamHandler": {
			"type": "object",
			"title": "URLStreamHandler"
		},
		"UpdateSubscriptionRequestDTO": {
			"type": "object",
			"properties": {
				"priceId": {
					"type": "string"
				}
			},
			"title": "UpdateSubscriptionRequestDTO"
		},
		"User": {
			"type": "object",
			"required": [
				"emailAddress",
				"firstName",
				"lastName"
			],
			"properties": {
				"emailAddress": {
					"type": "string",
					"example": "email@email.com"
				},
				"firstName": {
					"type": "string",
					"example": "firstname"
				},
				"initials": {
					"type": "string",
					"example": "A.B.C"
				},
				"lastName": {
					"type": "string",
					"example": "lastname"
				},
				"middleName": {
					"type": "string",
					"example": "middlename"
				}
			},
			"title": "User"
		},
		"UserActivationRequest": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"identityChainContent": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"publicKey": {
					"type": "string"
				},
				"replaySignatureContent": {
					"type": "string"
				},
				"signedIdentityChain": {
					"type": "string"
				},
				"signedPublicKey": {
					"type": "string"
				},
				"timestamp": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "UserActivationRequest"
		},
		"UserContactsDTO": {
			"type": "object",
			"properties": {
				"company": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"firstName": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"jobTitle": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"signatoryListsDTO": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SignatoryListsDTO"
					}
				}
			},
			"title": "UserContactsDTO"
		},
		"UserDTO": {
			"type": "object",
			"properties": {
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"email": {
					"type": "string"
				},
				"groups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Group"
					}
				},
				"id": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Role"
					}
				},
				"updatedAt": {
					"type": "string",
					"format": "date-time"
				},
				"username": {
					"type": "string"
				},
				"verificationStatus": {
					"type": "string",
					"enum": [
						"UNVERIFIED",
						"VERIFIED"
					]
				}
			},
			"title": "UserDTO"
		},
		"UserIdentityAvailability": {
			"type": "object",
			"properties": {
				"available": {
					"type": "boolean"
				}
			},
			"title": "UserIdentityAvailability"
		},
		"UserInvitationRequest": {
			"type": "object",
			"properties": {
				"emailAddress": {
					"type": "string"
				},
				"groupId": {
					"$ref": "#/definitions/Optional«string»"
				}
			},
			"title": "UserInvitationRequest"
		},
		"UserProfile": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"groups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GroupDTO"
					}
				},
				"id": {
					"type": "string"
				},
				"jobTitle": {
					"type": "string"
				},
				"joinedAt": {
					"type": "string",
					"format": "date-time"
				},
				"lastName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"signatoryLists": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SignatoryListsDTO"
					}
				},
				"updatedAt": {
					"type": "string",
					"format": "date-time"
				},
				"username": {
					"type": "string"
				}
			},
			"title": "UserProfile"
		},
		"UserResponse": {
			"type": "object",
			"required": [
				"emailAddress",
				"firstName",
				"lastName"
			],
			"properties": {
				"createdAt": {
					"type": "string",
					"format": "date-time",
					"example": "2020-07-21T17:32:28Z"
				},
				"emailAddress": {
					"type": "string",
					"example": "email@email.com"
				},
				"firstName": {
					"type": "string",
					"example": "firstname"
				},
				"groups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GroupResponse"
					}
				},
				"id": {
					"type": "string",
					"example": "af6ba444-06ef-11eb-adc1-0242ac120002"
				},
				"initials": {
					"type": "string",
					"example": "A.B.C"
				},
				"lastName": {
					"type": "string",
					"example": "lastname"
				},
				"lastUpdatedAt": {
					"type": "string",
					"format": "date-time",
					"example": "2020-07-21T18:32:28Z"
				},
				"middleName": {
					"type": "string",
					"example": "middlename"
				}
			},
			"title": "UserResponse"
		},
		"UserSettingsDTO": {
			"type": "object",
			"properties": {
				"notifyOnCompletedDocuments": {
					"type": "boolean"
				},
				"notifyOnEachSignature": {
					"type": "boolean"
				},
				"notifyOnSignatureRequest": {
					"type": "boolean"
				},
				"notifyViaEmail": {
					"type": "boolean"
				},
				"notifyViaNotification": {
					"type": "boolean"
				},
				"sound": {
					"type": "boolean"
				},
				"vibrate": {
					"type": "boolean"
				}
			},
			"title": "UserSettingsDTO"
		},
		"UserToGroup": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"example": "af6ba444-06ef-11eb-adc1-0242ac120002"
				}
			},
			"title": "UserToGroup",
			"xml": {
				"name": "UserToGroup",
				"attribute": false,
				"wrapped": false
			}
		},
		"VerificationInitiateRequest": {
			"type": "object",
			"properties": {
				"emailAddress": {
					"type": "string"
				}
			},
			"title": "VerificationInitiateRequest"
		},
		"VerificationResponse": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				}
			},
			"title": "VerificationResponse"
		}
	}
}